/*
 * generated by Xtext 2.14.0
 */
package org.xtext.example.nml.formatting2

import com.google.inject.Inject
import org.eclipse.xtext.formatting2.IFormattableDocument
import org.xtext.example.nml.nML.OctopusCP
import org.xtext.example.nml.nML.TopLevelCP
import org.xtext.example.nml.services.NMLGrammarAccess
import org.eclipse.xtext.formatting2.AbstractFormatter2 

class NMLFormatter extends AbstractFormatter2 {
	
	@Inject extension NMLGrammarAccess

	def dispatch void format(TopLevelCP topLevelCP, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (domainCP : topLevelCP.ownedDomains) {
			domainCP.format
		}
		for (statementCS : topLevelCP.ownedPre) {
			statementCS.format
		}
		for (octopusCP : topLevelCP.ownedOctopus) {
			octopusCP.format
		}
		for (oursCP : topLevelCP.ownedOurs) {
			oursCP.format
		}
		for (transformationCP : topLevelCP.ownedTransformation) {
			transformationCP.format
		}
	}

	def dispatch void format(OctopusCP octopusCP, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (modelTypeCS : octopusCP.ownedModels) {
			modelTypeCS.format
		}
		for (statementCS : octopusCP.ownedConditions) {
			statementCS.format
		}
	}
	
	// TODO: implement for OursCP, TransformationCP
}
